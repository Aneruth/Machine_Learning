Linear Regression

Selecting a model in Scikit-Learn (updated) : from sklearn.model_selection import train_test_split 

Train the data 

Train_test_split : 

Basically we do here is a tuple unpacking where we assign the test and train data for our assigned variable. The test_size is the percentage of the data we need to allocate. Random_state is to splits a specific set of random data because the train_test_split occurs randomly.


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=101)


To Import the Boston datasets we need to import : from skit.datasets import load_boston
								boston = load_boston()

To check the keys present in the data set (boston) : boston.key()


Predict the data

To predict the data : 

Step 1 : Initialise the unknown dataset : variable_name = model_name_locally_defined.predict( unknown_feature_used ) 

Step 2 : To fit the model to the training data : model_name.fit(trained_data)

Step 3 : To create a new DataFrame with respect to Coefficient : 
										new_variable_name = pd.DataFrame(model_name.ceof_,model_name.columns,columns=[‘Coefficient’])

Step 4 : To Predict the model : model_name.predict(X_test) 
			After predicting the model make a scatter plot the predicted data. 

Step 5 : We can also use the predicted data and test data to plot using histogram or histplot. 

Step 6 : Calculate the Regression Evaluation Metrics’ : 
						1. To calculate the Mean Absolute Error : metrics.mean_absolute_error(y_test,predicted_data)
						2. To calculate the Mean Squared Error : metrics.mean_squared_error(y_test,predicted_data)
						3. To calculate the Root Mean Square Error : np.sqrt(metrics.mean_squared_error(y_test,predicted_data))
